noStroke();
var xPositions = [];
var yPositions = [];
var dropColor  =[];
var numDrops = 1;
var bits=100;
var dropSpeed = 2;
var bitRain=true;
var currentScene=0;
var stillPlaying=true;
var score=0;
var BOS=true;
var keys = [];

var stars = function (){
for (var i =0; i<numDrops; ++i)
    {
        stroke(140, 121, 0);
    xPositions.push(round(random(4,390)));
    yPositions.push(round(random(0,300)));
    dropColor.push(color(255,255,255))
    ;}
    
    for (var i = 0; i < xPositions.length; i++) {
         fill(dropColor[i]);//drop color
    
        ellipse(xPositions[i], yPositions[i], 5, 7);// draws drops
    yPositions[i] += dropSpeed;
        
    }   
};


//bitmojis
var drawHead=function(HeadX,HeadY,headH){
    //body
    noStroke();
    fill(54,24,24);
    ellipse(HeadX+headH/100*210,HeadY+headH/100*180,headH/100*102,headH/100*123);
    rect(HeadX+headH/100*164,HeadY+headH/100*203,headH/100*93,headH/100*56,headH/100*72);
    fill(209, 174, 136);
    ellipse(HeadX+headH/100*211,HeadY+headH/100*186,headH/100*86,headH/100*100);
    fill(204, 155, 125);
    ellipse(HeadX+headH/100*184,HeadY+headH/100*200,headH/100*21,headH/100*15);
    ellipse(HeadX+headH/100*236,HeadY+headH/100*200,headH/100*21,headH/100*15);
    ellipse(HeadX+headH/100*211,HeadY+headH/100*214,headH/100*11,headH/100*6);
    fill(46, 6, 6);
    ellipse(HeadX+headH/100*191,HeadY+headH/100*194,headH/100*16,headH/100*10);
    ellipse(HeadX+headH/100*230,HeadY+headH/100*194,headH/100*16,headH/100*10);
    stroke(46,6,6);
    strokeWeight(headH/100*4);
    line(HeadX+headH/100*178,HeadY+headH/100*190,HeadX+headH/100*198,HeadY+headH/100*190);
    line(HeadX+headH/100*242,HeadY+headH/100*190,HeadX+headH/100*222,HeadY+headH/100*190);
    noFill();
    stroke(194, 134, 134);
    arc(HeadX+headH/100*211,HeadY+headH/100*201,headH/100*96,headH/100*-44,259,283);
    };


var drawHair=function(hairX,hairY,hairH){
    //hair
    noStroke();
    fill(54, 24, 24);
    arc(hairX+hairH/100*179,hairY+hairH/100*131,hairH/100*75,hairH/100*106,5,119);
    arc(hairX+hairH/100*244,hairY+hairH/100*138,hairH/100*39,hairH/100*106,55,194);
    arc(hairX+hairH/100*174,hairY+hairH/100*190,hairH/100*30,hairH/100*145,54,201);
    arc(hairX+hairH/100*245,hairY+hairH/100*190,hairH/100*30,hairH/100*145,-18,123);
    };


var drawBody=function(bodyX,bodyY,bodyH){
    //body
    fill(209, 174, 136);
    rect(bodyX+bodyH/100*197,bodyY+bodyH/100*233,bodyH/100*27,bodyH/100*30,bodyH/100*0);
    fill(135, 120, 120);
    quad(bodyX+bodyH/100*235,bodyY+bodyH/100*241,bodyX+bodyH/100*184,bodyY+bodyH/100*241        ,bodyX+bodyH/100*168,bodyY+bodyH/100*289,bodyX+bodyH/100*255,bodyY+bodyH/100*290);
    fill(255, 255, 255);
    textSize(bodyH/100*21);
    text("JLS",bodyX+bodyH/100*191,bodyY+bodyH/100*272);
    //hairclip
    fill(217, 167, 167);
    ellipse(bodyX+bodyH/100*257,bodyY+bodyH/100*167,bodyH/100*27,bodyH/100*10);
    ellipse(bodyX+bodyH/100*246,bodyY+bodyH/100*166,bodyH/100*18,bodyH/100*18);
    };

// Jayda's Bitmoji
var drawBitmoji=function(bitmojiX,bitmojiY,bitmojiH){
    drawHead(bitmojiX,bitmojiY,bitmojiH);
    drawHair(bitmojiX,bitmojiY,bitmojiH);
    drawBody(bitmojiX,bitmojiY,bitmojiH);
    };
    noStroke();
    
// Riss's Bitmoji
 var drawRBitmoji=function(x,y,bitmojiHeight){
   noStroke();
fill (132, 55, 34);
ellipse (x+(bitmojiHeight/100*100),y+bitmojiHeight/100*100,bitmojiHeight/100*83,bitmojiHeight/100*100);//head
fill(255, 255, 255);
fill(89, 38, 11);
stroke(232, 185, 35);

ellipse(x+bitmojiHeight/100*68,y+bitmojiHeight/100*46,bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*97,y+bitmojiHeight/100*68,bitmojiHeight/100*48,bitmojiHeight/100*-35);//hair
ellipse(x+bitmojiHeight/100*119,y+bitmojiHeight/100*(54),bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*97,y+bitmojiHeight/100*60,bitmojiHeight/100*48,bitmojiHeight/100*-35);//hair
ellipse(x+bitmojiHeight/100*76,y+bitmojiHeight/100*47,bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*119,y+bitmojiHeight/100*56,bitmojiHeight/100*48,bitmojiHeight/100*-35);//hair
ellipse(x+bitmojiHeight/100*52,y+bitmojiHeight/100*94,bitmojiHeight/100*25,bitmojiHeight/100*30);//hair
ellipse(x+bitmojiHeight/100*50,y+bitmojiHeight/100*70,bitmojiHeight/100*29,bitmojiHeight/100*-45);//hair
ellipse(x+bitmojiHeight/100*139,y+bitmojiHeight/100*57,bitmojiHeight/100*29,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*142,y+bitmojiHeight/100*80,bitmojiHeight/100*28,bitmojiHeight/100*-39);//hair
ellipse(x+bitmojiHeight/100*76,y+bitmojiHeight/100*68,bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*134,y+bitmojiHeight/100*60,bitmojiHeight/100*45,bitmojiHeight/100*-39);//hair
ellipse(x+bitmojiHeight/100*76,y+bitmojiHeight/100*40,bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*97,y+bitmojiHeight/100*43,bitmojiHeight/100*48,bitmojiHeight/100*-35);//hair
ellipse(x+bitmojiHeight/100*118,y+bitmojiHeight/100*48,bitmojiHeight/100*48,bitmojiHeight/100*-32);//hair
ellipse(x+bitmojiHeight/100*97,y+bitmojiHeight/100*68,bitmojiHeight/100*48,bitmojiHeight/100*-35);//hair

//eyebrows
stroke(78,53,36);
noFill();
arc(x+bitmojiHeight/100*76, y+bitmojiHeight/100*93, bitmojiHeight/100*21, bitmojiHeight/100*-14, 9, 174);
arc(x+bitmojiHeight/100*118, y+bitmojiHeight/100*92, bitmojiHeight/100*21, bitmojiHeight/100*-14, 9, 174);

//eyes
fill(98,52,18);
ellipse(x+bitmojiHeight/100*76,y+bitmojiHeight/100*94,bitmojiHeight/100*6,bitmojiHeight/100*5);
ellipse(x+bitmojiHeight/100*117,y+bitmojiHeight/100*93,bitmojiHeight/100*4,bitmojiHeight/100*5);
//nose
noStroke();
fill(140, 59, 4);
arc(x+bitmojiHeight/100*99, y+bitmojiHeight/100*115, bitmojiHeight/100*24, bitmojiHeight/100*-16, -3, 183);
//headband
noFill();
stroke(232, 185, 35);
arc(x+bitmojiHeight/100*100, y+bitmojiHeight/100*62, bitmojiHeight/100*133, bitmojiHeight/100*-11, 174, 323);

//lips
noStroke();
fill(201,130,118);
arc(x+bitmojiHeight/100*99, y+bitmojiHeight/100*128, bitmojiHeight/100*19, bitmojiHeight/100*-8, -3, 183);//top
arc(x+bitmojiHeight/100*99, y+bitmojiHeight/100*128, bitmojiHeight/100*23, bitmojiHeight/100*11, -3, 183);//bottom

// earrings
stroke(232, 185, 35);
noFill();
arc (x+bitmojiHeight/100*57, y+bitmojiHeight/100*113, bitmojiHeight/100*7, bitmojiHeight/100*18,-16, 358);
arc (x+bitmojiHeight/100*143, y+bitmojiHeight/100*109, bitmojiHeight/100*6, bitmojiHeight/100*18, -55, 401);

// body
fill (132, 55, 34);
noStroke();
arc(x+bitmojiHeight/100*103, y+bitmojiHeight/100*204, bitmojiHeight/100*104, bitmojiHeight/100*-96, 4, 177);//body
rect(x+bitmojiHeight/100*92, y+bitmojiHeight/100*146, bitmojiHeight/100*19, bitmojiHeight/100*16, bitmojiHeight/100*80);//neck

//shirt
fill(13, 13, 13);
arc(x+bitmojiHeight/100*103, y+bitmojiHeight/100*186, bitmojiHeight/100*111, bitmojiHeight/100*83, 3, 180);
//necklace
noFill();
stroke(232, 185, 35);
arc(x+bitmojiHeight/100*103, y+bitmojiHeight/100*157, bitmojiHeight/100*32, bitmojiHeight/100*42, 0, 180);
arc(x+bitmojiHeight/100*103, y+bitmojiHeight/100*163, bitmojiHeight/100*32, bitmojiHeight/100*51,0, 180);
arc(x+bitmojiHeight/100*102, y+bitmojiHeight/100*195, bitmojiHeight/100*15, bitmojiHeight/100*-14, -464, -195);
line(x+bitmojiHeight/100*106,y+bitmojiHeight/100*216,x+bitmojiHeight/100*95,y+bitmojiHeight/100*201);//slash in r
line(x+bitmojiHeight/100*90,y+bitmojiHeight/100*216,x+bitmojiHeight/100*96,y+bitmojiHeight/100*193);//long r
};

//Gloabal Variables
var currentScene=0;
var stillPlaying=true;
var playerLives = 3;

//Button Class
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    noStroke();
     fill(0, 100, 0);
    rect(this.x, this.y, this.width, this.height, 9);
    fill(255, 255, 255);
    textSize(32);
    textAlign(LEFT, TOP);
    text(this.label, this.x+32, this.y+this.height/14);
};

Button.prototype.isMouseInside = function() {
    return mouseX >= this.x &&
           mouseX <= (this.x + this.width) &&
           mouseY >= this.y &&
           mouseY <= (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};


var start = new Button({
    x: 117,
    y: 117,
    label: "Start!",
    onClick: function() {
        currentScene=4;
        
    }
});
                               //New buttons
var pause = new Button ({
    x: 3,
    y: 27,
    label: "Pause!",
    onClick: function(){
        currentScene = 3;
        stillPlaying= false;

    }
});
var Continue = new Button ({
    x: 20,
    y: 200,
    label: "Resume",
    onClick: function(){
        stillPlaying= true;
        currentScene = 1;

    }
});
var next = new  Button ({
    x: 200,
    y: 200,
    label: "Next",
    onClick: function(){
        stillPlaying= true;
        currentScene = 5;

    }
});
var quit = new  Button ({
    x: 200,
    y: 200,
    label: "Quit",
    onClick: function(){
        currentScene = 0;

    }
});
var play = new  Button ({
    x: 20,
    y: 200,
    label: "Play",
    onClick: function(){
        currentScene = 1;

    }
});
mouseClicked = function() {
     {
        start.handleMouseClick();
        pause.handleMouseClick(); 
    Continue.handleMouseClick();
        next.handleMouseClick();
        quit.handleMouseClick();
        play.handleMouseClick();
        
        }
};
// shooting 
var Bullets = function(x,y){
    this.x = x; 
    this.y = y;
};
Bullets.prototype.draw = function() {
     ellipse(this.x,this.y,10,10);
      pushMatrix();
    fill(75, 219, 75);
    translate(this.x, this.y);
     noStroke();
    rect(0, 0, this.width, this.height);
    popMatrix();
};


// player 
    var Player = function (x,y){
this.x = mouseX;
this.y = mouseY;
};

Player.prototype.draw = function() {
    stroke(0, 0, 0);
    fill(204, 198, 198);
     triangle(mouseX+-15, mouseY+10, mouseX+15, mouseY+10, mouseX, mouseY-20);
};

// {
Player.prototype.fire = function() {
    if (keys[32] && this.fireDelay === 0) {}};




var player = new Player (mouseX, mouseY-100);
var bullet = new Bullets (player.x, player.y);

var bullets = [];

var splashScreen = function(){
    currentScene=0;
    background(37, 31, 61);
    stars();
    //Jayda's Bitmoji
    drawBitmoji(194,203,60);
    // Riss's Bitmoji
    drawRBitmoji(100,248,58);
    fill(255, 255, 255);
    textSize(50);
    text("ASTEROIDS", 53,40);
    start.draw();

};

var introScene= function()
{currentScene=4;
 background(37, 31, 61);
textSize(16);
    fill(255, 255, 255);
    text("Hello There! I see you've gotten stranded in Space. The only way to get home is to play my game and hope to defeat me. Are you up to the challenge? If so press Start, if not that's alright only the bravest mortals take up my challenge.",40,40,300,300);
text("If you proceed I must warn you to not leave the bounds for something bad will happen. YOU'VE BEEN WARNED!!",33,263,286,290);
    quit.draw();
    play.draw();
};

var pauseScene = function(){
    currentScene=3;
background(57, 57, 89);
fill(255, 255, 255);
textSize(25);
text("Game Paused",100,28);
textSize(27);
textAlign(CENTER,TOP);
text("I see you paused the game, do you wish to quit?",14,58,400,400);
  Continue.draw();
quit.draw();
};


var endScene = function()
{currentScene=2;
fill(255, 255, 255);
background (57, 57, 89);
textSize(25);
text ("GAME OVER!!", 200,200);
textSize(30);
text("final score: " + score, 200,250);
drawBitmoji(160,54,50);
drawRBitmoji(20,54,50);
fill(240, 8, 35);
textSize(27);
text("Game Over!! Out of Bounds :(",30,30); 
};



var playGame = function(){
  
    currentScene=1;
        if (stillPlaying) { 
            background(57, 57, 89); 
            textSize(15);
            text("lives : "+playerLives, 300,10);
            text ("score : " + score, 10,10);
               player.draw(); 
               bullets.draw();
        if (mouseY +30 >= 400){ BOS=false;}
        else{ BOS=true;
        if (mouseX +30 >= 400){ BOS=false;}
        else { BOS=true;}
       }
    if (keyIsPressed && key.case === 32){
            for(var l =0; l<10; l++){
    bullet.draw(player.x,player.y); bullet.y++;
        pause.draw();
        if (BOS!== true){ stillPlaying=false;
        endScene();
}

                 }
    
        }
        }
};
 var playGameRiss = function(){
    currentScene=5;
    background(51,184,100);
     var stillplaying=true;

        if (stillplaying) { background(57, 57, 89);
 
    if (mouseY +60 >= 400){ BOS=false;}
        else { BOS=true;
        if (mouseX +60 >= 400){ BOS=false;}
        else { BOS=true;}
        }
    
        if (BOS!== true){ stillplaying=false;
endScene(); } 
}
};
     

draw = function() {
    if(currentScene===0){splashScreen();}
    if(currentScene===1){playGame();  }
     if(currentScene===2){endScene();}
    if(currentScene===3){pauseScene();}
     if (currentScene===4){introScene();
       if (currentScene===5){playGameRiss();
    }
     }
};
